---

- tags: bootstrap-git
  block:
    - name: HTTP proxy for git
      when: configure_git_http == true
      git_config:
        scope: system
        name: http.proxy
        value: "{{ bootstrap_http_proxy_git }}"

    - name: HTTPS proxy for git
      when: configure_git_https == true
      git_config:
        scope: system
        name: https.proxy
        value: "{{ bootstrap_https_proxy_git }}"

- when: configure_pip == true
  tags: bootstrap-pip
  block:
    - name: HTTP proxy for pip (directories)
      file: path="{{ item.home }}/.config/pip" owner={{ item.user }} state=directory
      with_items:
        - user: root
          home: /root
        - user: "{{ ansible_env['SUDO_USER'] }}"
          home: "{{ ansible_env['PWD'] }}"

    - name: HTTP proxy for pip (files)
      ini_file:
        path: "{{ item.home }}/.config/pip/pip.conf"
        section: global
        option: proxy
        value: "{{ bootstrap_http_proxy_pip }}"
        mode: 0644
        owner: "{{ item.user }}"
      with_items:
        - user: root
          home: /root
        - user: "{{ ansible_env['SUDO_USER'] }}"
          home: "{{ ansible_env['PWD'] }}"

- when: configure_cargo == true
  tags: bootstrap-cargo
  block:
    - name: HTTP proxy for cargo (directories)
      file:
        path: "{{ ansible_env['HOME'] }}/.cargo"
        owner: "{{ ansible_user }}"
        state: directory

    - name: HTTP proxy for cargo (files)
      ini_file:
        path: "{{ item.home }}/.cargo/config"
        section: http
        option: proxy
        value: "{{ bootstrap_http_proxy_cargo | urlsplit('hostname') }}/{{ bootstrap_http_proxy_cargo | urlsplit('port') }}"
        mode: 0644
        owner: "{{ item.user }}"
      with_items:
        - user: root
          home: /root
        - user: "{{ ansible_env['SUDO_USER'] }}"
          home: "{{ ansible_env['PWD'] }}"

- when: configure_rsyslog == true
  tags: bootstrap-rsyslog
  block:
    - name: Set a remote target for rsyslog
      template: src=rsyslog-remote.conf.j2 dest=/etc/rsyslog.d/99-remote.conf
      notify: restart rsyslog

- when: configure_syslog_ng == true
  tags: bootstrap-syslog-ng
  block:
    - name: Set a remote target for syslog-ng
      template: src=syslog-ng-remote.conf.j2 dest=/etc/syslog-ng/conf.d/99-remote.conf
      notify: restart syslog-ng

- when: configure_hostname == true
  name: Set hostname according to the inventory
  hostname: name="{{ bootstrap_hostname }}"

- when: configure_htp == true
  block:
    - name: HTP configuration
      template: src={{ item.src }} dest={{ item.dest }}
      register: htpdate_conf
      notify: restart htpdate
      with_items:
        - src: htpdate.j2
          dest: "{{ bootstrap_sysconfig_path }}/htpdate"
        - src: htpdate.service.j2
          dest: /etc/systemd/system/htpdate.service

    - name: Systemd reload
      command: systemctl daemon-reload
      when: htpdate_conf is changed

- when: configure_ntp == true
  block:
    - name: NTP configuration
      template: src=ntp.conf.j2 dest=/etc/ntp.conf
      notify: restart ntpdate

# TODO: for systemd-timesyncd.service, use timedatectl set-ntp yes
